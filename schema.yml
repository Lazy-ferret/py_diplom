openapi: 3.0.3
info:
  title: Orders App API
  version: 1.0.0
  description: backend applications for ordering goods in stores
paths:
  /api/v1/cart/:
    get:
      operationId: api_v1_cart_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_cart_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_cart_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/category/:
    get:
      operationId: api_v1_category_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /api/v1/contacts/:
    get:
      operationId: api_v1_contacts_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_contacts_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /api/v1/products/search/:
    get:
      operationId: api_v1_products_search_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/shops/:
    get:
      operationId: api_v1_shops_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopList'
          description: ''
  /api/v1/shops/create:
    post:
      operationId: api_v1_shops_create_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/shops/orders:
    get:
      operationId: api_v1_shops_orders_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/shops/status:
    put:
      operationId: api_v1_shops_status_update
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/shops/update:
    put:
      operationId: api_v1_shops_update_update
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/user/confirm/:
    post:
      operationId: api_v1_user_confirm_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/details/:
    get:
      operationId: api_v1_user_details_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_user_details_update
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/user/login/:
    post:
      operationId: api_v1_user_login_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/orders/:
    get:
      operationId: api_v1_user_orders_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_user_orders_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/user/register/:
    post:
      operationId: api_v1_user_register_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название категории
          maxLength: 50
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
      required:
      - id
      - name
      - products
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedShopList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название продукта
          maxLength: 100
        category:
          type: string
          readOnly: true
        product_infos:
          type: array
          items:
            $ref: '#/components/schemas/ProductInfo'
          readOnly: true
      required:
      - category
      - id
      - product_infos
    ProductInfo:
      type: object
      properties:
        model:
          type: string
          title: Модель
          maxLength: 80
        external_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Внешний ИД
        product:
          type: integer
          nullable: true
          title: Продукт
        shop:
          type: integer
          nullable: true
          title: Магазин
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Цена
        price_rrc:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Рекомендуемая розничная цена
      required:
      - external_id
      - price
      - price_rrc
      - quantity
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название магазина
          maxLength: 50
        state:
          type: boolean
          title: Статус получения заказов
        url:
          type: string
          format: uri
          nullable: true
          title: Ссылка
          maxLength: 200
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
      required:
      - categories
      - id
      - name
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
